{"version":3,"file":"static/js/63.5f72a26c.chunk.js","mappings":"0NACA,EAA8B,4BAA9B,EAA4E,gCAA5E,EAA6H,+BAA7H,EAA+K,iCAA/K,EAAkO,gCAAlO,EAAyQ,qB,SC0DzQ,EArDe,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACVC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACV,eAAIL,UAAWC,EAAf,UACE,UAAC,KAAD,CACEK,GAAI,CACFC,SAAS,WAAD,OAAaC,IAAK,GAAD,OAAIH,EAAJ,YAAaF,KACtCM,MAAO,CAAEC,KAAMZ,IAEjBE,UAAWC,EALb,UAOGG,GACC,gBACEJ,UAAWC,EACXU,IAAG,yCAAoCP,GACvCQ,IAAKP,EACLQ,QAAQ,OACRC,MAAM,MACNC,OAAO,SAGT,gBACEf,UAAWC,EACXU,IAAKK,EACLJ,IAAKP,EACLQ,QAAQ,OACRC,MAAM,MACNC,OAAO,SAIX,gBAAKf,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SAAoCI,UA7BHF,EAD7B,OAsCnB,C,4GC/CKc,EAAYC,EAAAA,EAAAA,OAAa,CAC7BC,QAAS,+BACTC,QAAS,IAETC,OAAQ,CACNC,QAAS,sCAIN,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kGAEoBP,EAAUO,GAF9B,uBAEKC,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHC,EAAAA,GAAAA,MAAA,wJALG,gF,yKCNQ,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAO/B,EAAP,KAAegC,EAAf,KACA,GAAwBD,EAAAA,EAAAA,UAAS,GAAjC,eAAOE,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACIV,EAAAA,EAAAA,GAAY,6BAAD,OAA8BO,IAD7C,OACXjC,EADW,OAEjBgC,EAAUhC,GAFO,2CAAH,qDAKhBoC,GACD,GAAE,CAACH,IAGJ,OACE,8BACGjC,IACC,UAAC,IAAD,CACEqC,WAAYrC,EAAOsC,cACnBC,KANS,kBAAML,GAAQ,SAAAD,GAAI,OAAIA,EAAO,CAAX,GAAlB,EAOTO,SAAS,EACTC,MAAO,CAAEC,UAAW,UACpBC,QACA,SAAC,KAAD,CACRzB,OAAO,MACPD,MAAM,MACN2B,MAAM,UACNC,UAAU,YACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,eAAe,GACfC,gBAAgB,GAChBC,cAAc,KAhBR,UAoBG,IACD,SAAC,IAAD,CAAQnD,OAAQA,EAAOoD,cAKhC,C","sources":["webpack://goit-react-hw-05-movies/./src/component/Movies/Movies.module.css?1426","component/Movies/Movies.jsx","service/api.js","views/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"galleryList\":\"Movies_galleryList__WwPvT\",\"galleryListItem\":\"Movies_galleryListItem__i58RU\",\"galleryListImg\":\"Movies_galleryListImg__8WgAw\",\"galleryListTitle\":\"Movies_galleryListTitle__28y2G\",\"galleryListCard\":\"Movies_galleryListCard__l5P05\",\"link\":\"Movies_link__zqp7K\"};","import PropTypes from \"prop-types\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport img from \"../../images/nofoto.jpg\";\nimport slug from \"slugify\";\nimport s from \"./Movies.module.css\";\n\nconst Movies = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul className={s.galleryList}>\n        {movies.map(({ id, poster_path, title }) => (\n          <li className={s.galleryListItem} key={id}>\n            <Link\n              to={{\n                pathname: `/movies/${slug(`${title}-${id}`)}`,\n                state: { from: location },\n              }}\n              className={s.link}\n            >\n              {poster_path ? (\n                <img\n                  className={s.galleryListImg}\n                  src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                  alt={title}\n                  loading=\"lazy\"\n                  width=\"274\"\n                  height=\"398\"\n                />\n              ) : (\n                <img\n                  className={s.galleryListImg}\n                  src={img}\n                  alt={title}\n                  loading=\"lazy\"\n                  width=\"274\"\n                  height=\"398\"\n                />\n              )}\n\n              <div className={s.galleryListCard}>\n                <h3 className={s.galleryListTitle}>{title}</h3>\n              </div>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\nexport default Movies;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst getMovies = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  timeout: 1000,\n\n  params: {\n    api_key: '843d6905879c9b52f41f5f6a1e2c8966',\n  },\n});\n\nexport async function fetchMovies(q) {\n  try {\n    const { data } = await getMovies(q);\n    return data;\n  } catch (error) {\n    toast.error(`Нет фильма по вашему запросу`);\n  }\n}\n","import { useEffect, useState } from 'react';\nimport { fetchMovies } from '../../service/api';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport {LineWave} from 'react-loader-spinner';\nimport Movies from '../../component/Movies/Movies';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState(null);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    const asyncFetch = async () => {\n      const movies = await fetchMovies(`/trending/movie/week?page=${page}`);\n      setMovies(movies);\n    };\n\n    asyncFetch();\n  }, [page]);\n\n  const nextPage = () => setPage(page => page + 1);\n  return (\n    <>\n      {movies && (\n        <InfiniteScroll\n          dataLength={movies.total_results}\n          next={nextPage}\n          hasMore={true}\n          style={{ textAlign: 'center' }}\n          loader={\n          <LineWave\n  height=\"100\"\n  width=\"100\"\n  color=\"#4fa94d\"\n  ariaLabel=\"line-wave\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n  firstLineColor=\"\"\n  middleLineColor=\"\"\n  lastLineColor=\"\"\n/>\n          }\n        >\n          {''}\n          <Movies movies={movies.results} />\n        </InfiniteScroll>\n      )}\n    </>\n  );\n}\n"],"names":["movies","location","useLocation","className","s","map","id","poster_path","title","to","pathname","slug","state","from","src","alt","loading","width","height","img","getMovies","axios","baseURL","timeout","params","api_key","fetchMovies","q","data","toast","HomePage","useState","setMovies","page","setPage","useEffect","asyncFetch","dataLength","total_results","next","hasMore","style","textAlign","loader","color","ariaLabel","wrapperStyle","wrapperClass","visible","firstLineColor","middleLineColor","lastLineColor","results"],"sourceRoot":""}