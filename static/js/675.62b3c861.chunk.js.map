{"version":3,"file":"static/js/675.62b3c861.chunk.js","mappings":"4NAGMA,EAAYC,EAAAA,EAAAA,OAAa,CAC7BC,QAAS,+BACTC,QAAS,IAETC,OAAQ,CACNC,QAAS,sCAIN,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kGAEoBP,EAAUO,GAF9B,uBAEKC,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHC,EAAAA,GAAAA,MAAA,wJALG,gF,yHCDDC,GAASC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACdC,GAAcD,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IAuCzB,UArCyB,WACvB,IAAME,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GADUC,EAAAA,EAAAA,MAATC,KACcC,MAAM,cAAc,GACzC,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACGnB,EAAAA,EAAAA,GAAY,SAAD,OAAUW,IADxB,OACXK,EADW,OAEjBC,EAASD,GAFQ,2CAAH,qDAIhBG,GACD,GAAE,CAACR,IAWJ,OACE,iCACE,SAACP,EAAD,CAAQgB,YAXQ,WAClB,GAAIb,GAAYA,EAASc,OAASd,EAASc,MAAMC,KAAjD,CACE,MAA6Bf,EAASc,MAAMC,KAApCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAClBf,EAASgB,KAAT,UAAiBF,GAAjB,OAA4BC,GAE7B,MACDf,EAASgB,KAAT,IACD,IAKGT,IAAS,SAACV,EAAD,CAAaU,MAAOA,KAC9B,SAAC,EAAAU,SAAD,CAAUC,UAAU,SAAC,KAAD,IAApB,UACG,SAAC,KAAD,QAKP,C","sources":["service/api.js","views/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst getMovies = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  timeout: 1000,\n\n  params: {\n    api_key: '843d6905879c9b52f41f5f6a1e2c8966',\n  },\n});\n\nexport async function fetchMovies(q) {\n  try {\n    const { data } = await getMovies(q);\n    return data;\n  } catch (error) {\n    toast.error(`Нет фильма по вашему запросу`);\n  }\n}\n","import { useState, useEffect, Suspense, lazy } from 'react';\nimport {\n  useParams,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport{ LineWave} from 'react-loader-spinner';\nimport { fetchMovies } from '../../service/api';\n\n\nconst Button = lazy(() => import('../../component/Button/Button.jsx'));\nconst MovieDetail = lazy(() => import('./MovieDetail/MovieDetail.jsx'));\n\nconst MovieDetailsPage = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const{ slug  }= useParams();\n  const movieId = slug.match(/[a-z0-9]+$/)[0];\n  const [movie, setMovie] = useState(null);\n  \n  useEffect(() => {\n    const asyncFetch = async () => {\n      const movie = await fetchMovies(`movie/${movieId}`);\n      setMovie(movie);\n    }; \n    asyncFetch();\n  }, [movieId]);\n \n  const onBackClick = () => {\n    if (location && location.state && location.state.from) {\n      const { pathname, search } = location.state.from;\n      navigate.push(`${pathname}${search}`);\n      return;\n    }\n    navigate.push(`/`);\n  };\n\n  return (\n    <>\n      <Button onBackClick={onBackClick} />\n     {movie && <MovieDetail movie={movie} />}\n     <Suspense fallback={<LineWave />}>\n        <Outlet />\n      </Suspense>\n\n    </>\n  );\n};\n\n\nexport default MovieDetailsPage;"],"names":["getMovies","axios","baseURL","timeout","params","api_key","fetchMovies","q","data","toast","Button","lazy","MovieDetail","location","useLocation","navigate","useNavigate","movieId","useParams","slug","match","useState","movie","setMovie","useEffect","asyncFetch","onBackClick","state","from","pathname","search","push","Suspense","fallback"],"sourceRoot":""}