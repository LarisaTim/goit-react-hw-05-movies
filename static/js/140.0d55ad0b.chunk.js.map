{"version":3,"file":"static/js/140.0d55ad0b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/component/Movies/Movies.module.css?1426","component/Movies/Movies.jsx","service/api.js","webpack://goit-react-hw-05-movies/./src/component/Form/Form.module.css?7d5d","component/Form/Form.jsx","views/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"galleryList\":\"Movies_galleryList__WwPvT\",\"galleryListItem\":\"Movies_galleryListItem__i58RU\",\"galleryListImg\":\"Movies_galleryListImg__8WgAw\",\"galleryListTitle\":\"Movies_galleryListTitle__28y2G\",\"galleryListCard\":\"Movies_galleryListCard__l5P05\",\"link\":\"Movies_link__zqp7K\"};","import PropTypes from \"prop-types\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport img from \"../../images/nofoto.jpg\";\nimport slug from \"slugify\";\nimport s from \"./Movies.module.css\";\n\nconst Movies = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul className={s.galleryList}>\n        {movies.map(({ id, poster_path, title }) => (\n          <li className={s.galleryListItem} key={id}>\n            <Link\n              to={{\n                pathname: `/movies/${slug(`${title}-${id}`)}`,\n                state: { from: location },\n              }}\n              className={s.link}\n            >\n              {poster_path ? (\n                <img\n                  className={s.galleryListImg}\n                  src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                  alt={title}\n                  loading=\"lazy\"\n                  width=\"274\"\n                  height=\"398\"\n                />\n              ) : (\n                <img\n                  className={s.galleryListImg}\n                  src={img}\n                  alt={title}\n                  loading=\"lazy\"\n                  width=\"274\"\n                  height=\"398\"\n                />\n              )}\n\n              <div className={s.galleryListCard}>\n                <h3 className={s.galleryListTitle}>{title}</h3>\n              </div>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\nexport default Movies;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst getMovies = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  timeout: 1000,\n\n  params: {\n    api_key: '843d6905879c9b52f41f5f6a1e2c8966',\n  },\n});\n\nexport async function fetchMovies(q) {\n  try {\n    const { data } = await getMovies(q);\n    return data;\n  } catch (error) {\n    toast.error(`Нет фильма по вашему запросу`);\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"Form_searchForm__8fzh+\",\"searchFormInput\":\"Form_searchFormInput__L9OT7\",\"searchFormButton\":\"Form_searchFormButton__ZwS5Z\"};","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FiSearch } from \"react-icons/fi\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport s from \"./Form.module.css\";\n\nconst Form = ({ onSubmit }) => {\n  const [query, setQuery] = useState(\"\");\n\n  const handleNameChange = (evt) => {\n    setQuery(evt.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    if (query.trim() === \"\") {\n      toast.warning(\"Enter searcher\");\n      return;\n    }\n\n    onSubmit(query);\n    setQuery(\"\");\n  };\n\n  return (\n    <form className={s.searchForm} onSubmit={handleSubmit}>\n      <input\n        className={s.searchFormInput}\n        type=\"text\"\n        name=\"query\"\n        autoComplete=\"off\"\n        placeholder=\"Search movies\"\n        value={query}\n        onChange={handleNameChange}\n      />\n      <button type=\"submit\" className={s.searchFormButton} aria-label=\"search\">\n        <FiSearch />\n      </button>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default Form;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport {\n  useLocation,\n useNavigate\n} from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport {LineWave} from \"react-loader-spinner\";\n// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Form from \"../../component/Form/Form\";\nimport { fetchMovies } from \"../../service/api\";\nimport Movies from \"../../component/Movies/Movies\";\n\nexport default function MoviesPage() {\n  const location = useLocation();\n  const history = useNavigate();\n  const [query, setQuery] = useState(null);\n  const [page, setPage] = useState(1);\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const asyncFetch = async () => {\n      const movies = await fetchMovies(\n        `search/movie?query=${query}&page=${page}`\n      );\n      setMovies(movies);\n    };\n\n    asyncFetch();\n  }, [page, query]);\n\n  const onFormSubmit = (query) => {\n    setQuery(query);\n    setPage(1);\n    history.push({ ...location, search: `query=${query}` });\n  };\n\n  return (\n    <>\n      <Form onSubmit={onFormSubmit} />\n      {movies && (\n        <InfiniteScroll\n          dataLength={movies.total_results}\n          next={() => setPage(page + 1)}\n          hasMore={true}\n          style={{ textAlign: \"center\" }}\n          loader={\n            <LineWave\n  height=\"100\"\n  width=\"100\"\n  color=\"#4fa94d\"\n  ariaLabel=\"line-wave\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n  firstLineColor=\"\"\n  middleLineColor=\"\"\n  lastLineColor=\"\"\n/>\n          }\n        >\n          {\"\"}\n          <Movies movies={movies.results} />\n        </InfiniteScroll>\n      )}\n    </>\n  );\n}\n"],"names":["movies","location","useLocation","className","s","map","id","poster_path","title","to","pathname","slug","state","from","src","alt","loading","width","height","img","getMovies","axios","baseURL","timeout","params","api_key","fetchMovies","q","data","toast","onSubmit","useState","query","setQuery","evt","preventDefault","trim","type","name","autoComplete","placeholder","value","onChange","currentTarget","toLowerCase","MoviesPage","history","useNavigate","page","setPage","setMovies","useEffect","asyncFetch","push","search","dataLength","total_results","next","hasMore","style","textAlign","loader","color","ariaLabel","wrapperStyle","wrapperClass","visible","firstLineColor","middleLineColor","lastLineColor","Movies","results"],"sourceRoot":""}