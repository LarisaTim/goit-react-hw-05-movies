{"version":3,"file":"static/js/675.4f48b6fa.chunk.js","mappings":"4NAGMA,EAAYC,EAAAA,EAAAA,OAAa,CAC7BC,QAAS,+BACTC,QAAS,IAETC,OAAQ,CACNC,QAAS,sCAIN,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kGAEoBP,EAAUO,GAF9B,uBAEKC,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHC,EAAAA,GAAAA,MAAA,wJALG,gF,yHCADC,GAAUC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACfC,GAAOD,EAAAA,EAAAA,OAAK,kBAAM,0BAAN,IACZE,GAASF,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACdG,GAAcH,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IA+CzB,UA7CyB,WACvB,IAAMI,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,MACRC,GAASC,EAAAA,EAAAA,MAATD,KAEFE,GADWC,EAAAA,EAAAA,MAATC,KACaC,MAAM,cAAc,GACzC,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACGvB,EAAAA,EAAAA,GAAY,SAAD,OAAUe,IADxB,OACXK,EADW,OAEjBC,EAASD,GAFQ,2CAAH,qDAIhBG,GACD,GAAE,CAACR,IAEJ,IAAMS,EAAc,WAClB,GAAIf,GAAYA,EAASgB,OAAShB,EAASgB,MAAMC,KAAjD,CACE,MAA6BjB,EAASgB,MAAMC,KAApCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAClBjB,EAAQkB,KAAR,UAAgBF,GAAhB,OAA2BC,GAE5B,MACDjB,EAAQkB,KAAR,IACD,EAED,OACE,+BACE,UAAC,EAAAC,SAAD,CAAUC,UAAU,SAAC,KAAD,IAApB,WACE,SAACxB,EAAD,CAAQiB,YAAaA,IAEpBJ,IAAS,SAACZ,EAAD,CAAaY,MAAOA,KAE9B,UAAC,KAAD,CAAOP,KAAI,UAAKA,EAAL,SAAX,WACE,SAACN,EAAD,CAAQiB,YAAaA,KACrB,SAAClB,EAAD,QAEF,UAAC,KAAD,CAAOO,KAAI,UAAKA,EAAL,YAAX,WACE,SAACN,EAAD,CAAQiB,YAAaA,KACrB,SAACpB,EAAD,WAKT,C","sources":["service/api.js","views/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst getMovies = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  timeout: 1000,\n\n  params: {\n    api_key: '843d6905879c9b52f41f5f6a1e2c8966',\n  },\n});\n\nexport async function fetchMovies(q) {\n  try {\n    const { data } = await getMovies(q);\n    return data;\n  } catch (error) {\n    toast.error(`Нет фильма по вашему запросу`);\n  }\n}\n","import { useState, useEffect, Suspense, lazy } from 'react';\nimport {\n  useParams,\n  Route,\n  useMatch,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport{ LineWave} from 'react-loader-spinner';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { fetchMovies } from '../../service/api';\n\nconst Reviews = lazy(() => import('../../component/Reviews/Reviews.jsx'));\nconst Cast = lazy(() => import('../../component/Cast/Cast.jsx'));\nconst Button = lazy(() => import('../../component/Button/Button.jsx'));\nconst MovieDetail = lazy(() => import('./MovieDetail/MovieDetail.jsx'));\n\nconst MovieDetailsPage = () => {\n  const location = useLocation();\n  const history = useNavigate();\n  const { path } = useMatch();\n  const { slug } = useParams();\n  const movieId = slug.match(/[a-z0-9]+$/)[0];\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    const asyncFetch = async () => {\n      const movie = await fetchMovies(`movie/${movieId}`);\n      setMovie(movie);\n    };\n    asyncFetch();\n  }, [movieId]);\n\n  const onBackClick = () => {\n    if (location && location.state && location.state.from) {\n      const { pathname, search } = location.state.from;\n      history.push(`${pathname}${search}`);\n      return;\n    }\n    history.push(`/`);\n  };\n\n  return (\n    <>\n      <Suspense fallback={<LineWave />}>\n        <Button onBackClick={onBackClick}  />\n\n        {movie && <MovieDetail movie={movie} />}\n\n        <Route path={`${path}/cast`}>\n          <Button onBackClick={onBackClick}></Button>\n          <Cast />\n        </Route>\n        <Route path={`${path}/reviews`}>\n          <Button onBackClick={onBackClick}></Button>\n          <Reviews />\n        </Route>\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["getMovies","axios","baseURL","timeout","params","api_key","fetchMovies","q","data","toast","Reviews","lazy","Cast","Button","MovieDetail","location","useLocation","history","useNavigate","path","useMatch","movieId","useParams","slug","match","useState","movie","setMovie","useEffect","asyncFetch","onBackClick","state","from","pathname","search","push","Suspense","fallback"],"sourceRoot":""}