{"version":3,"file":"static/js/91.1a9ca8a9.chunk.js","mappings":"0PACA,GAAgB,SAAW,uBAAuB,KAAO,mBAAmB,IAAM,kBAAkB,KAAO,mBAAmB,KAAO,oB,mBCGtH,SAASA,EAAT,GAA6B,IAAbC,EAAY,EAAZA,SAC7B,OACE,eAAIC,UAAWC,EAAAA,SAAf,SACGF,EAASG,KAAKC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACjB,gBAAaP,UAAWC,EAAAA,KAAxB,WACE,iBAAKD,UAAWC,EAAAA,QAAhB,WACE,eAAID,UAAWC,EAAAA,KAAf,SAAwBI,KACxB,gBAAIL,UAAWC,EAAAA,KAAf,cAAyBK,EAAzB,WAEF,gBACEN,UAAWC,EAAAA,IACXO,IACED,EAAY,yCAC0BA,GAClCE,EAENC,IAAKL,EACLM,QAAQ,WAbHP,EADQ,KAoBxB,CCtBc,SAASN,IACtB,IACMc,GADWC,EAAAA,EAAAA,MAATC,KACaC,MAAM,cAAc,GACzC,GAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAOjB,EAAP,KAAiBkB,EAAjB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACEC,EAAAA,EAAAA,GAAY,SAAD,OAAUR,EAAV,aADb,OACXV,EADW,OAEjBe,EAAYf,GAFK,2CAAH,qDAKhBiB,GACD,GAAE,CAACP,KAEG,8BAAGb,IAAY,SAACD,EAAD,CAAUC,SAAUA,KAC3C,C,4GCjBKsB,EAAYC,EAAAA,EAAAA,OAAa,CAC7BC,QAAS,+BACTC,QAAS,IAETC,OAAQ,CACNC,QAAS,sCAIN,SAAeN,EAAtB,+CAAO,OAAP,oBAAO,WAA2BO,GAA3B,kGAEoBN,EAAUM,GAF9B,uBAEKC,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHC,EAAAA,GAAAA,MAAA,wJALG,gF","sources":["webpack://goit-react-hw-05-movies/./src/component/Cast/Cast.module.css?a1e8","component/Cast/CastItem/CastItem.jsx","component/Cast/Cast.jsx","service/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cardList\":\"Cast_cardList__l1qrN\",\"card\":\"Cast_card__IsuS+\",\"img\":\"Cast_img__uR36S\",\"char\":\"Cast_char__bPv4k\",\"name\":\"Cast_name__qH6Nk\"};","import PropTypes from \"prop-types\";\nimport s from \"../Cast.module.css\";\nimport img from \"../../../images/nofoto.jpg\";\n\nexport default function Cast({ castList }) {\n  return (\n    <ul className={s.cardList}>\n      {castList.cast.map(({ id, name, character, profile_path }) => (\n        <li key={id} className={s.card}>\n          <div className={s.nameBox}>\n            <h3 className={s.name}>{name}</h3>\n            <h4 className={s.char}>({character})</h4>\n          </div>\n          <img\n            className={s.img}\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                : img\n            }\n            alt={name}\n            loading=\"lazy\"\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nCast.propTypes = {\n  castList: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  }),\n};\n","import { fetchMovies } from \"../../service/api\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CastItem from \"./CastItem/CastItem\";\n\nexport default function Cast() {\n  const { slug } = useParams();\n  const movieId = slug.match(/[a-z0-9]+$/)[0];\n  const [castList, setCastList] = useState(null);\n\n  useEffect(() => {\n    const asyncFetch = async () => {\n      const cast = await fetchMovies(`movie/${movieId}/credits`);\n      setCastList(cast);\n    };\n\n    asyncFetch();\n  }, [movieId]);\n\n  return <>{castList && <CastItem castList={castList} />}</>;\n}\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst getMovies = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  timeout: 1000,\n\n  params: {\n    api_key: '843d6905879c9b52f41f5f6a1e2c8966',\n  },\n});\n\nexport async function fetchMovies(q) {\n  try {\n    const { data } = await getMovies(q);\n    return data;\n  } catch (error) {\n    toast.error(`Нет фильма по вашему запросу`);\n  }\n}\n"],"names":["Cast","castList","className","s","cast","map","id","name","character","profile_path","src","img","alt","loading","movieId","useParams","slug","match","useState","setCastList","useEffect","asyncFetch","fetchMovies","getMovies","axios","baseURL","timeout","params","api_key","q","data","toast"],"sourceRoot":""}